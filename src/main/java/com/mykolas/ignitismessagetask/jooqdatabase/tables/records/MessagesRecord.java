/*
 * This file is generated by jOOQ.
 */
package com.mykolas.ignitismessagetask.jooqdatabase.tables.records;


import com.mykolas.ignitismessagetask.jooqdatabase.tables.Messages;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessagesRecord extends UpdatableRecordImpl<MessagesRecord> implements Record7<Long, Long, LocalDateTime, Integer, String, Long, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>APP.MESSAGES.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>APP.MESSAGES.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>APP.MESSAGES.AUTHOR_ID</code>.
     */
    public void setAuthorId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>APP.MESSAGES.AUTHOR_ID</code>.
     */
    public Long getAuthorId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>APP.MESSAGES.TIME</code>.
     */
    public void setTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>APP.MESSAGES.TIME</code>.
     */
    public LocalDateTime getTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>APP.MESSAGES.LENGTH</code>.
     */
    public void setLength(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>APP.MESSAGES.LENGTH</code>.
     */
    public Integer getLength() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>APP.MESSAGES.CONTENT</code>.
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>APP.MESSAGES.CONTENT</code>.
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>APP.MESSAGES.RECEIVER_ID</code>.
     */
    public void setReceiverId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>APP.MESSAGES.RECEIVER_ID</code>.
     */
    public Long getReceiverId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>APP.MESSAGES.AUTHORACTIVE</code>.
     */
    public void setAuthoractive(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>APP.MESSAGES.AUTHORACTIVE</code>.
     */
    public Boolean getAuthoractive() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, LocalDateTime, Integer, String, Long, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, LocalDateTime, Integer, String, Long, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Messages.MESSAGES.ID;
    }

    @Override
    public Field<Long> field2() {
        return Messages.MESSAGES.AUTHOR_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Messages.MESSAGES.TIME;
    }

    @Override
    public Field<Integer> field4() {
        return Messages.MESSAGES.LENGTH;
    }

    @Override
    public Field<String> field5() {
        return Messages.MESSAGES.CONTENT;
    }

    @Override
    public Field<Long> field6() {
        return Messages.MESSAGES.RECEIVER_ID;
    }

    @Override
    public Field<Boolean> field7() {
        return Messages.MESSAGES.AUTHORACTIVE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAuthorId();
    }

    @Override
    public LocalDateTime component3() {
        return getTime();
    }

    @Override
    public Integer component4() {
        return getLength();
    }

    @Override
    public String component5() {
        return getContent();
    }

    @Override
    public Long component6() {
        return getReceiverId();
    }

    @Override
    public Boolean component7() {
        return getAuthoractive();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAuthorId();
    }

    @Override
    public LocalDateTime value3() {
        return getTime();
    }

    @Override
    public Integer value4() {
        return getLength();
    }

    @Override
    public String value5() {
        return getContent();
    }

    @Override
    public Long value6() {
        return getReceiverId();
    }

    @Override
    public Boolean value7() {
        return getAuthoractive();
    }

    @Override
    public MessagesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MessagesRecord value2(Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public MessagesRecord value3(LocalDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    public MessagesRecord value4(Integer value) {
        setLength(value);
        return this;
    }

    @Override
    public MessagesRecord value5(String value) {
        setContent(value);
        return this;
    }

    @Override
    public MessagesRecord value6(Long value) {
        setReceiverId(value);
        return this;
    }

    @Override
    public MessagesRecord value7(Boolean value) {
        setAuthoractive(value);
        return this;
    }

    @Override
    public MessagesRecord values(Long value1, Long value2, LocalDateTime value3, Integer value4, String value5, Long value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessagesRecord
     */
    public MessagesRecord() {
        super(Messages.MESSAGES);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(Long id, Long authorId, LocalDateTime time, Integer length, String content, Long receiverId, Boolean authoractive) {
        super(Messages.MESSAGES);

        setId(id);
        setAuthorId(authorId);
        setTime(time);
        setLength(length);
        setContent(content);
        setReceiverId(receiverId);
        setAuthoractive(authoractive);
    }
}
